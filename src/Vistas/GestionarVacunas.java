/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoADatos.VacunaData;
import Entidades.Vacuna;
import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.time.Instant;
import java.time.LocalDate;
import java.awt.event.KeyEvent;
import java.time.ZoneId;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.Date;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class GestionarVacunas extends javax.swing.JInternalFrame {

    private Vacuna vacuna;
    private final VacunaData vc;
    private Color defaultColor = new Color(142, 170, 189);
    private Container c = getContentPane();

    public GestionarVacunas() {

        initComponents();

        vc = new VacunaData();
        vacuna = new Vacuna();
        c.setBackground(defaultColor);
        jLTagEliminado.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        jTFNroSerieDosis = new javax.swing.JTextField();
        jCBMedida = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnCargarVacuna = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jDCFechaCaduca = new com.toedter.calendar.JDateChooser();
        jCBMarca = new javax.swing.JComboBox<>();
        jCBColocada = new javax.swing.JComboBox<>();
        btnAlternancia = new javax.swing.JButton();
        jLTagEliminado = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(142, 170, 189));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "www.argentina.gob.ar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 1, 12), new java.awt.Color(3, 67, 97))); // NOI18N
        jPanel1.setDoubleBuffered(false);
        jPanel1.setFocusCycleRoot(true);
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(750, 500));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gestionar Vacuna");

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(245, 245, 245));
        jLabel8.setText("N° de Serie");

        btnLimpiar.setBackground(new java.awt.Color(157, 161, 158));
        btnLimpiar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/escoba.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseReleased(evt);
            }
        });
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jTFNroSerieDosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNroSerieDosisActionPerformed(evt);
            }
        });
        jTFNroSerieDosis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFNroSerieDosisKeyPressed(evt);
            }
        });

        jCBMedida.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jCBMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una Opción", "0.3", "0.5", "0.9" }));
        jCBMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBMedidaActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(245, 245, 245));
        jLabel11.setText("Marca");

        jLabel12.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(245, 245, 245));
        jLabel12.setText("Colocada");

        jLabel13.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(245, 245, 245));
        jLabel13.setText("Fecha de caducidad");

        jLabel15.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(245, 245, 245));
        jLabel15.setText("Medida");

        btnSalir.setBackground(new java.awt.Color(0, 204, 204));
        btnSalir.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(0, 0, 0));
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/salida.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSalirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSalirMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSalirMouseReleased(evt);
            }
        });
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCargarVacuna.setBackground(new java.awt.Color(35, 153, 67));
        btnCargarVacuna.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnCargarVacuna.setForeground(new java.awt.Color(0, 0, 0));
        btnCargarVacuna.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/jeringuilla.png"))); // NOI18N
        btnCargarVacuna.setText("Cargar");
        btnCargarVacuna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCargarVacunaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCargarVacunaMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCargarVacunaMouseReleased(evt);
            }
        });
        btnCargarVacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarVacunaActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(41, 84, 171));
        btnBuscar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(0, 0, 0));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/lupa.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Debe Ingresar un número de Serie");
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnBuscarMouseReleased(evt);
            }
        });
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(138, 4, 17));
        btnEliminar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/basura.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnEliminarMouseReleased(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(224, 131, 38));
        btnModificar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 0, 0));
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/editar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModificarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModificarMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnModificarMouseReleased(evt);
            }
        });
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jCBMarca.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jCBMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una Opción", "ARNm (Pfiser)", "mRNA-1273 (Moderna)", "ChAdOx1-s (AstraSeneca)", "BBIBP-Corv (Sinopharm)", "Gam-Covid-VacM (Sputnik)" }));
        jCBMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBMarcaActionPerformed(evt);
            }
        });

        jCBColocada.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jCBColocada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Si" }));
        jCBColocada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBColocadaActionPerformed(evt);
            }
        });

        btnAlternancia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/sol_luna.png"))); // NOI18N
        btnAlternancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlternanciaActionPerformed(evt);
            }
        });

        jLTagEliminado.setForeground(new java.awt.Color(255, 0, 0));
        jLTagEliminado.setText("Eliminada");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAlternancia)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel12))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDCFechaCaduca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTFNroSerieDosis, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(98, 98, 98))
                                    .addComponent(jCBMedida, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCBMarca, 0, 392, Short.MAX_VALUE)
                                    .addComponent(jCBColocada, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(366, 366, 366))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLTagEliminado, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(230, 230, 230))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(98, 98, 98)
                                    .addComponent(jLabel1)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnCargarVacuna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAlternancia)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLTagEliminado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar)
                            .addComponent(jTFNroSerieDosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jCBMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDCFechaCaduca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBColocada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargarVacuna)
                    .addComponent(btnModificar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnEliminar)
                    .addComponent(btnSalir))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseEntered

        Color myColor = new Color(213, 230, 224); // creo mí color personalizado-*-

        btnLimpiar.setBackground(myColor);
    }//GEN-LAST:event_btnLimpiarMouseEntered

    private void btnLimpiarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseExited

        btnLimpiar.setBackground(new Color(157, 161, 158));
    }//GEN-LAST:event_btnLimpiarMouseExited

    private void btnLimpiarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseReleased

        try {
            TimeUnit.MILLISECONDS.sleep(300);

            // En caso de haber funciones van aquí dentro-*-
        } catch (InterruptedException ex) {
            Logger.getLogger(GestionarCiudadano.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLimpiarMouseReleased

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed

        limpiarPantalla();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    // PARA BORRAR
    private void jTFNroSerieDosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNroSerieDosisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNroSerieDosisActionPerformed

    private void jTFNroSerieDosisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNroSerieDosisKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnBuscar.doClick();
        }

    }//GEN-LAST:event_jTFNroSerieDosisKeyPressed
    // PARA BORRAR
    private void jCBMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBMedidaActionPerformed

    }//GEN-LAST:event_jCBMedidaActionPerformed

    private void btnSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseEntered

        Color myColor = new Color(41, 124, 166); // creo mí color personalizado-*-

        btnSalir.setBackground(myColor);
    }//GEN-LAST:event_btnSalirMouseEntered

    private void btnSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseExited

        btnSalir.setBackground(new Color(0, 204, 204));
    }//GEN-LAST:event_btnSalirMouseExited

    private void btnSalirMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseReleased

        try {
            TimeUnit.MILLISECONDS.sleep(300);

            // En caso de haber funciones van aquí dentro-*-
        } catch (InterruptedException ex) {
            Logger.getLogger(GestionarCiudadano.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSalirMouseReleased

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        JPanel panel = new JPanel();
        Font customFont = new Font("Roboto", Font.BOLD, 15);

        JLabel label = new JLabel("<html><p style=\" color: #eb4034; font: 13px; font-weight: bold; font-family: Roboto;\" >¿Esta seguro que deseas salir?</p></html>");
        label.setForeground(Color.black);
        label.setFont(customFont); // fuente custom etiqueta-*-
        panel.add(label);

        ImageIcon icono = new ImageIcon(getClass().getResource("../recursos/escudo.png"));

        String[] options = {"Salir", "Cancelar"}; // agregar opción "Cancelar"
        int result = JOptionPane.showOptionDialog(this, panel, "Ministerio de Salud Argentina", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, icono, options, null);

        if (result == JOptionPane.YES_OPTION) { // si se hace clic en "Salir"
            dispose(); // cerrar la ventana
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCargarVacunaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarVacunaMouseEntered

        Color myColor = new Color(12, 71, 6); // creo mí color personalizado-*-

        btnCargarVacuna.setBackground(myColor);
    }//GEN-LAST:event_btnCargarVacunaMouseEntered

    private void btnCargarVacunaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarVacunaMouseExited

        btnCargarVacuna.setBackground(new Color(35, 153, 67));
    }//GEN-LAST:event_btnCargarVacunaMouseExited

    private void btnCargarVacunaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarVacunaMouseReleased

        try {
            TimeUnit.MILLISECONDS.sleep(300);

        } catch (InterruptedException ex) {
            Logger.getLogger(GestionarCiudadano.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCargarVacunaMouseReleased

    private void btnCargarVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarVacunaActionPerformed

        try {
            String nroSerieDosisText = jTFNroSerieDosis.getText();
            String marca = (String) jCBMarca.getSelectedItem();
            String medidaText = (String) jCBMedida.getSelectedItem();
            int laboratorio = 1;
            Boolean colocada = false;
            Boolean eliminada = false;
            if (nroSerieDosisText.isEmpty() || marca == "Seleccione una Opción" || medidaText == "Seleccione una Opción") {
                JOptionPane.showMessageDialog(this, "Debe completar todos los campos.");
            } else if (nroSerieDosisText.length() < 11 && nroSerieDosisText.length() > 8 && nroSerieDosisText.matches("[0-9]+")) {
                int nroSerieDosis = Integer.parseInt(nroSerieDosisText);
                // verifica si ya existe la vacuna en la DB
                VacunaData vacunaData = new VacunaData();
                if (!(vacunaData.existeVacuna(nroSerieDosis))) {
                    // si no existe se almacena en DB
                    Double medida = Double.parseDouble(medidaText);
                    LocalDate fechaCaduca = jDCFechaCaduca.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    String colocadaText = (String) jCBColocada.getSelectedItem();
//                    String eliminadaText = (String) jCBEliminada.getSelectedItem();
                    switch (colocadaText) {
                        case "Si":
                            colocada = true;
                            break;
                        case "No":
                            colocada = false;
                            break;
                    }
                    switch (marca) {
                        case "ARNm (Pfiser)":
                            laboratorio = 1;
                            break;
                        case "mRNA-1273 (Moderna)":
                            laboratorio = 2;
                            break;
                        case "ChAdOx1-s (AstraSeneca)":
                            laboratorio = 3;
                            break;
                        case "BBIBP-Corv (Sinopharm)":
                            laboratorio = 4;
                            break;
                        case "Gam-Covid-VacM (Sputnik)":
                            laboratorio = 5;
                            break;
                    }
                    Vacuna vacuna = new Vacuna(nroSerieDosis, marca, medida, fechaCaduca, colocada, laboratorio, eliminada);
                    vacunaData.GuardarVacuna(vacuna);
                    limpiarPantalla();
                } else {
                    JOptionPane.showMessageDialog(this, "Ya existe una vacuna con ese número de serie.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Número de serie inválido. Debe contener entre 9 y 10 caracteres.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El campo Número de serie debe ser un número válido.");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha.");
        }

    }//GEN-LAST:event_btnCargarVacunaActionPerformed

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered

        Color myColor = new Color(29, 34, 179); // creo mí color personalizado-*-

        btnBuscar.setBackground(myColor);

    }//GEN-LAST:event_btnBuscarMouseEntered

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited

        btnBuscar.setBackground(new Color(41, 84, 171));

    }//GEN-LAST:event_btnBuscarMouseExited

    private void btnBuscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseReleased

        try {
            TimeUnit.MILLISECONDS.sleep(300);

            // En caso de haber funciones van aquí dentro-*-
        } catch (InterruptedException ex) {
            Logger.getLogger(GestionarCiudadano.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnBuscarMouseReleased

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        try {
            int nroSerieDosis = Integer.parseInt(jTFNroSerieDosis.getText());

            vacuna = vc.buscarVacunaNroSerieDosis(nroSerieDosis);
            if (vacuna != null) {
                if (vacuna.isEliminada() == true) {
                    int restaurar = JOptionPane.showConfirmDialog(this, "Esta vacuna se encuentra en estado ELIMINADA. "
                            + "¿Desea restaurarla? Si presiona NO, no se restaurará pero podrá visualizar"
                            + " igualmente los datos.", "Vacuna eliminada", 0, 1);
                    if (restaurar == 0) {
                        vc.restaurarVacuna(nroSerieDosis);
                        vacuna.setEliminada(false);
                        jLTagEliminado.setVisible(false);
                    } else {
                        jLTagEliminado.setVisible(true);
                    }
                }
//                JOptionPane.showMessageDialog(this, vacuna.toString());
//                jCBLaboratorio.setSelectedItem(String.valueOf(vacuna.getLaboratorio()));
                jCBMarca.setSelectedItem(vacuna.getMarca());
                jCBMedida.setSelectedItem(String.valueOf(vacuna.getMedida()));
                LocalDate fecha = (LocalDate) vacuna.getFechaCaduca();
                Instant instant = fecha.atStartOfDay(ZoneId.systemDefault()).toInstant();
                Date date = Date.from(instant);
                jDCFechaCaduca.setDate(date);

                if (vacuna.isColocada()) {
                    jCBColocada.setSelectedItem("Si");
                } else {
                    jCBColocada.setSelectedItem("No");
                }

//                if (vacuna.isEliminada()) {
//                    jCBEliminada.setSelectedItem("Si");
//                } else {
//                    jCBEliminada.setSelectedItem("No");
//                }
//                boolean eliminada = jRBEliminada.isSelected();
            } else {
                JOptionPane.showMessageDialog(this, "El número de serie no está registrado.");
            }
        } catch (NumberFormatException nbe) {
            JOptionPane.showMessageDialog(this, "Número de serie inválido. Debe contener entre 9 y 10 caracteres numéricos.");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "El número de serie no está registrado.");
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered

        Color myColor = new Color(224, 9, 78); // creo mí color personalizado-*-

        btnEliminar.setBackground(myColor);
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited

        btnEliminar.setBackground(new Color(138, 4, 17));

    }//GEN-LAST:event_btnEliminarMouseExited

    private void btnEliminarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseReleased

        try {
            TimeUnit.MILLISECONDS.sleep(300);

            // En caso de haber funciones van aquí dentro-*-
        } catch (InterruptedException ex) {
            Logger.getLogger(GestionarCiudadano.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarMouseReleased

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        try {
            
            int nroSerieDosis = Integer.parseInt(jTFNroSerieDosis.getText());
            vacuna = vc.buscarVacunaNroSerieDosis(nroSerieDosis);
            if (vacuna != null) {
            if (vacuna.isEliminada() == true) {
                JOptionPane.showMessageDialog(this, "La vacuna ya se encuentra eliminada.");
            } else {
                int eliminar = JOptionPane.showConfirmDialog(this, "Está por eliminar esta vacuna."
                        + "¿Está seguro? Si presiona SI, la vacuna podrá ser restaurada",
                        "Eliminar Vacuna", 0, 1);
                if (eliminar == 0) {
                    vc.eliminarVacuna(nroSerieDosis);
                    btnLimpiar.doClick();
                }
            }
            } else {
                JOptionPane.showMessageDialog(c, "Debe ingresear un número de serie válido.");
            }
            
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una vacuna.");
        } catch (NumberFormatException e){
                JOptionPane.showMessageDialog(c, "Debe ingresear un número de serie válido.");
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseEntered

        Color myColor = new Color(138, 71, 4); // creo mí color personalizado-*-

        btnModificar.setBackground(myColor);
    }//GEN-LAST:event_btnModificarMouseEntered

    private void btnModificarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseExited

        btnModificar.setBackground(new Color(224, 131, 38));
    }//GEN-LAST:event_btnModificarMouseExited

    private void btnModificarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseReleased

        try {
            TimeUnit.MILLISECONDS.sleep(300);

            // En caso de haber funciones van aquí dentro-*-
        } catch (InterruptedException ex) {
            Logger.getLogger(GestionarCiudadano.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnModificarMouseReleased

//          Método Modificar vacuna
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        try {

            long nroSerieDosis = Long.parseLong(jTFNroSerieDosis.getText());

            vacuna = vc.buscarVacunaNroSerieDosis(nroSerieDosis);

            if (vacuna == null) {
                JOptionPane.showMessageDialog(this, "La vacuna no existe en la base de datos.");
                return;
            }
            if (vacuna.isEliminada() == true) {
                JOptionPane.showMessageDialog(this, "La vacuna se encuentra eliminada. No se puede modificar.");
            } else {
                String marcaText = (String) jCBMarca.getSelectedItem();
                int laboratorio = 1;
//            int laboratorioInt = Integer.valueOf(laboratoriotex);
                String medidaText = (String) jCBMedida.getSelectedItem();
                double medidaDouble = Double.valueOf(medidaText);
                LocalDate fechaCaduca = jDCFechaCaduca.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                String colocadaText = (String) jCBColocada.getSelectedItem();
                switch (colocadaText) {
                    case "Si":
                        vacuna.setColocada(true);
                        break;
                    case "No":
                        vacuna.setColocada(false);
                        break;
                }
                switch (marcaText) {
                    case "ARNm (Pfiser)":
                        laboratorio = 1;
                        break;
                    case "mRNA-1273 (Moderna)":
                        laboratorio = 2;
                        break;
                    case "ChAdOx1-s (AstraSeneca)":
                        laboratorio = 3;
                        break;
                    case "BBIBP-Corv (Sinopharm)":
                        laboratorio = 4;
                        break;
                    case "Gam-Covid-VacM (Sputnik)":
                        laboratorio = 5;
                        break;
                }
                vacuna.setLaboratorio(laboratorio);
                vacuna.setFechaCaduca(fechaCaduca);
                vacuna.setMarca(marcaText);
                vacuna.setMedida(medidaDouble);

                vc.modificarVacuna(vacuna);

                limpiarPantalla();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El campo número de serie, debe ser un número válido.");
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    // PARA BORRAR 
    private void jCBMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBMarcaActionPerformed

    private void jCBColocadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBColocadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBColocadaActionPerformed

    // BTN ALTERNANCIA 
    private boolean isBlack = false; // inicializamos color-*-
//    private Color defaultColor = new Color(142, 170, 189); // color x default-*-
    private void btnAlternanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlternanciaActionPerformed
//        Container c = getContentPane();
        if (isBlack) {
            c.setBackground(defaultColor);
            isBlack = false;
        } else {
            c.setBackground(Color.BLACK);
            isBlack = true;
        }
    }//GEN-LAST:event_btnAlternanciaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlternancia;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCargarVacuna;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> jCBColocada;
    private javax.swing.JComboBox<String> jCBMarca;
    private javax.swing.JComboBox<String> jCBMedida;
    private com.toedter.calendar.JDateChooser jDCFechaCaduca;
    private javax.swing.JLabel jLTagEliminado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTFNroSerieDosis;
    // End of variables declaration//GEN-END:variables

    public void limpiarPantalla() {

        if (jTFNroSerieDosis.getText().isEmpty() && jCBMarca.getSelectedItem().equals("Seleccione una Opción") && jDCFechaCaduca.getDate() == null &&  jCBMedida.getSelectedItem().equals("Seleccione una Opción")) {
            JOptionPane.showMessageDialog(null, "Campos vacíos");
        } else {
            jTFNroSerieDosis.setText("");
            jCBMarca.setSelectedItem("Seleccione una Opción");
            jDCFechaCaduca.setDate(null);
            jCBMedida.setSelectedItem("Seleccione una Opción");
//            jCBLaboratorio.setSelectedItem("Seleccione una Opción");
            jCBColocada.setSelectedItem("No");
//            jCBEliminada.setSelectedItem("No");
        }
    }
}
